{"ast":null,"code":"import _defineProperty from \"/Users/nurmamat/Desktop/Mes Projects/Projet personnelle/multimedia-front-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport jwt_decode from 'jwt-decode';\nimport { GlobalConstants } from '../shared/global-constanst';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./snackbar.service\";\nexport let RouteGuardService = /*#__PURE__*/(() => {\n  class RouteGuardService {\n    constructor(auth, router, snackbarService) {\n      _defineProperty(this, \"auth\", void 0);\n      _defineProperty(this, \"router\", void 0);\n      _defineProperty(this, \"snackbarService\", void 0);\n      this.auth = auth;\n      this.router = router;\n      this.snackbarService = snackbarService;\n    }\n    canActivate(route) {\n      let excepctedRoleArray = route.data;\n      excepctedRoleArray = excepctedRoleArray.expectedRole;\n      const token = localStorage.getItem('token');\n      var tokenPayload;\n      try {\n        tokenPayload = jwt_decode(token);\n      } catch (err) {\n        localStorage.clear();\n        this.router.navigate(['/']);\n      }\n      let expectedRole = '';\n      for (let i = 0; i < excepctedRoleArray.length; i++) {\n        if (excepctedRoleArray[i] == tokenPayload.role) {\n          expectedRole = tokenPayload.role;\n        }\n      }\n      if (tokenPayload.role == 'user' || tokenPayload.role == 'admin') {\n        if (this.auth.isAuthenticated() && tokenPayload.role == expectedRole) {\n          return true;\n        }\n        this.snackbarService.openSnackBar(GlobalConstants.unauthroized, GlobalConstants.error);\n        this.router.navigate(['/multimedia/dashboard']);\n        return false;\n      } else {\n        this.router.navigate(['/']);\n        localStorage.clear();\n        return false;\n      }\n    }\n  }\n  _defineProperty(RouteGuardService, \"\\u0275fac\", function RouteGuardService_Factory(t) {\n    return new (t || RouteGuardService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.SnackbarService));\n  });\n  _defineProperty(RouteGuardService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RouteGuardService,\n    factory: RouteGuardService.ɵfac,\n    providedIn: 'root'\n  }));\n  return RouteGuardService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}